---
- name: download key for Ceph repo
  get_url:
    url: https://download.ceph.com/keys/release.asc
    dest: /etc/apt/trusted.gpg.d/ceph.asc

- name: Add ceph repository
  apt_repository:
    repo: "deb https://download.ceph.com/debian-{{ ceph_version }}/ {{ ansible_distribution_release }} main"
    state: present
    filename: ceph
  register: ceph_repo

- name: install ceph from packages
  apt:
    update_cache: "{{ ceph_repo is changed }}"
    name: radosgw
    state: present

- name: fix rights
  file:
    path: /etc/ceph
    state: directory
    owner: ceph
    group: ceph

- name: check if needed conf files are present
  stat:
    path: "/tmp/{{ item|basename }}"
  register: st_conf_files
  delegate_to: localhost
  become: false
  loop:
    - /etc/ceph/ceph.conf
    - /etc/ceph/ceph.client.admin.keyring

- name: copy files to all the nodes
  copy:
    src: "/tmp/{{ item.item|basename }}"
    dest: "{{ item.item }}"
    owner: ceph
    group: ceph
  when: item.stat.exists
  loop: "{{ st_conf_files.results }}"

- name: create rgw directory
  file:
    path: "/var/lib/ceph/radosgw/ceph-rgw.{{ inventory_hostname }}"
    state: directory
    owner: ceph
    group: ceph
    recurse: true

- name: check if rgw user exists
  command: "ceph auth get client.rgw.{{ inventory_hostname }}"
  failed_when: false
  changed_when: false
  register: rgw_user

- name: create user for rgw service
  command: "ceph auth get-or-create client.rgw.{{ inventory_hostname }} osd 'allow rwx' mon 'allow rw'"
  become_user: ceph
  become: true
  register: auth_rgw
  changed_when: rgw_user.rc != 0

- name: create keyring for rgw
  template:
    src: keyring.j2
    dest: "/var/lib/ceph/radosgw/ceph-rgw.{{ inventory_hostname }}/keyring"
    owner: ceph
    group: ceph

- name: create default pools
  command: "ceph osd pool create {{ item }} {{ pg_num }} --yes-i-really-mean-it"
  register: rgw_pools
  changed_when: "'already exists' not in rgw_pools.stderr"
  become_user: ceph
  become: true
  loop:
    - default.rgw.buckets.data
    - default.rgw.buckets.index
    - default.rgw.buckets.non-ec
    - default.rgw.control
    - default.rgw.meta
    - default.rgw.log
    - .rgw.root

- name: get data bucket bulk config
  command: "ceph osd pool get default.rgw.buckets.data bulk"
  run_once: true
  changed_when: false
  register: cmd_bulk

- name: set data bucket as bulk
  command: "ceph osd pool set default.rgw.buckets.data bulk true"
  run_once: true
  when: "cmd_bulk.stdout == 'bulk: false'"

- name: get pool application
  command: "ceph osd pool application get {{ item.item }}"
  register: rgw_app
  changed_when: false
  become_user: ceph
  become: true
  loop: "{{ rgw_pools.results }}"

- name: set pool application
  command: "ceph osd pool application enable {{ item.item.item }} rgw"
  when: "'rgw' not in item.stdout"
  become_user: ceph
  become: true
  loop: "{{ rgw_app.results }}"

- name: start rgw daemon
  systemd:
    name: "ceph-radosgw@rgw.{{ inventory_hostname }}"
    enabled: true
    state: started
