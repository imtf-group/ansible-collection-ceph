---
- name: download key for Ceph repo
  get_url:
    url: https://download.ceph.com/keys/release.asc
    dest: /etc/apt/trusted.gpg.d/ceph.asc

- name: Add ceph repository
  apt_repository:
    repo: "deb https://download.ceph.com/debian-{{ ceph_version }}/ {{ ansible_distribution_release }} main"
    state: present
    filename: ceph
  register: ceph_repo

- name: install ceph from packages
  apt:
    update_cache: "{{ ceph_repo is changed }}"
    name: ceph
    state: present

- name: fix rights
  file:
    path: /etc/ceph
    state: directory
    owner: ceph
    group: ceph

- name: check if needed conf files are present
  stat:
    path: "/tmp/{{ item|basename }}"
  register: st_conf_files
  delegate_to: localhost
  become: false
  loop:
    - /etc/ceph/ceph.conf
    - /var/lib/ceph/bootstrap-osd/ceph.keyring
    - /etc/ceph/ceph.client.admin.keyring

- name: copy files to all the nodes
  copy:
    src: "/tmp/{{ item.item|basename }}"
    dest: "{{ item.item }}"
    owner: ceph
    group: ceph
  when: item.stat.exists
  loop: "{{ st_conf_files.results }}"

- name: detect new disks
  command: lsblk -d --exclude 7,1 -n -o NAME
  changed_when: false
  register: block_dev

- name: get new disk name
  set_fact:
    new_devices: "{{ new_devices|d([]) + [item] }}"
  when:
    - all_devices|bool or item in osd_devices
    - item in ansible_devices
    - not ansible_devices[item].partitions
    - item != 'sr0'
  loop: "{{ block_dev.stdout_lines }}"

- name: create OSD
  command: "ceph-volume lvm create --data /dev/{{ item }}"
  register: create_osd
  changed_when: "'already prepared' not in create_osd.stderr"
  loop: "{{ new_devices }}"
