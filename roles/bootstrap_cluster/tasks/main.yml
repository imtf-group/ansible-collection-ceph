---
- block:
    - name: download key for Ceph repo
      get_url:
        url: https://download.ceph.com/keys/release.asc
        dest: /etc/apt/trusted.gpg.d/ceph.asc

    - name: Add ceph repository
      apt_repository:
        repo: "deb https://download.ceph.com/debian-{{ ceph_version }}/ {{ ansible_distribution_release }} main"
        state: present
        filename: ceph
      register: ceph_repo

    - name: install ceph from packages
      apt:
        update_cache: "{{ ceph_repo is changed }}"
        name: ceph
        state: present

    - name: fix rights
      file:
        path: /etc/ceph
        state: directory
        owner: ceph
        group: ceph

    - name: check if conf exists
      stat:
        path: /etc/ceph/ceph.conf
      register: st_ceph_conf

    - name: get fsid
      command: sed -n 's/fsid = \(.*\)$/\1/p' /etc/ceph/ceph.conf
      register: ceph_fsid_from_file
      changed_when: false
      when: st_ceph_conf.stat.exists

    - set_fact:
        ceph_fsid:
          stdout: "{{ ceph_fsid_from_file.stdout }}"
      when: ceph_fsid_from_file is not skipped

    - name: choose cephFS id
      command: uuidgen
      register: ceph_fsid_from_uuid
      when: not st_ceph_conf.stat.exists

    - set_fact:
        ceph_fsid:
          stdout: "{{ ceph_fsid_from_uuid.stdout }}"
      when: ceph_fsid_from_uuid is not skipped

    - name: create ceph.conf
      template:
        src: ceph.conf.j2
        dest: /etc/ceph/ceph.conf
        owner: ceph
        group: ceph

    - name: create mon keyring
      command: ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
      become_user: ceph
      become: true
      args:
        creates: /tmp/ceph.mon.keyring

    - name: create admin keyring
      command: ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
      become_user: ceph
      become: true
      args:
        creates: /etc/ceph/ceph.client.admin.keyring

    - name: create osd keyring
      command: ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd'
      become_user: ceph
      become: true
      args:
        creates: /var/lib/ceph/bootstrap-osd/ceph.keyring

    - name: slurp mon keyring
      slurp:
        src: /tmp/ceph.mon.keyring
      register: mon_keyring_file

    - name: import admin keyring into mon keyring
      command: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
      become_user: ceph
      become: true
      when: "'client.admin' not in (mon_keyring_file.content | b64decode)"

    - name: import osd keyring into mon keyring
      command: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring
      become_user: ceph
      become: true
      when: "'client.bootstrap-osd' not in (mon_keyring_file.content | b64decode)"

    - name: check if /tmp/monmap exists
      stat:
        path: /tmp/monmap
      register: st_monmap

    - name: create monmap file
      command: monmaptool --create --fsid {{ ceph_fsid.stdout }} /tmp/monmap
      args:
        creates: /tmp/monmap
      become_user: ceph
      become: true
      when: not st_monmap.stat.exists

    - name: Add hosts to monmap
      command: monmaptool --add {{ hostvars[item].inventory_hostname }} {{ hostvars[item].ansible_host }} --fsid {{ ceph_fsid.stdout }} /tmp/monmap
      become_user: ceph
      become: true
      loop: "{{ groups[group_names[0]] }}"
      when: not st_monmap.stat.exists

    - name: fetch all the needed files
      fetch:
        src: "{{ item }}"
        dest: "/tmp/{{ item|basename }}"
        flat: true
      loop:
        - /etc/ceph/ceph.conf
        - /tmp/monmap
        - /tmp/ceph.mon.keyring
        - /var/lib/ceph/bootstrap-osd/ceph.keyring
        - /etc/ceph/ceph.client.admin.keyring
  run_once: true