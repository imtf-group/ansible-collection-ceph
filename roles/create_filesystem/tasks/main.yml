---
- name: download key for Ceph repo
  get_url:
    url: https://download.ceph.com/keys/release.asc
    dest: /etc/apt/trusted.gpg.d/ceph.asc

- name: Add ceph repository
  apt_repository:
    repo: "deb https://download.ceph.com/debian-{{ ceph_version }}/ {{ ansible_distribution_release }} main"
    state: present
    filename: ceph
  register: ceph_repo

- name: install ceph from packages
  apt:
    update_cache: "{{ ceph_repo is changed }}"
    name: ceph
    state: present

- name: fix rights
  file:
    path: /etc/ceph
    state: directory
    owner: ceph
    group: ceph

- name: check if needed conf files are present
  stat:
    path: "/tmp/{{ item|basename }}"
  register: st_conf_files
  delegate_to: localhost
  become: false
  loop:
    - /etc/ceph/ceph.conf
    - /etc/ceph/ceph.client.admin.keyring

- name: copy files to all the nodes
  copy:
    src: "/tmp/{{ item.item|basename }}"
    dest: "{{ item.item }}"
    owner: ceph
    group: ceph
  when: item.stat.exists
  loop: "{{ st_conf_files.results }}"

- name: check if volume exists
  command: ceph fs volume ls
  run_once: true
  changed_when: false
  register: ceph_vol

- name: create pools
  command: "ceph osd pool create {{ item }} {{ pg_num }} {{ pg_num }}"
  run_once: true
  when: "volume_name not in ceph_vol.stdout"
  loop:
    - "{{ volume_name }}_data"
    - "{{ volume_name }}_metadata"

- name: get data pool bulk config
  command: "ceph osd pool get {{ volume_name }}_data bulk"
  run_once: true
  changed_when: false
  register: cmd_bulk

- name: set data pool as bulk
  command: "ceph osd pool set {{ volume_name }}_data bulk true"
  run_once: true
  when: "cmd_bulk.stdout == 'bulk: false'"

- name: get data pool pg_autoscale_mode config
  command: "ceph osd pool get {{ volume_name }}_data pg_autoscale_mode"
  run_once: true
  changed_when: false
  register: cmd_autoscale

- name: set data pool as autoscaled
  command: "ceph osd pool set {{ volume_name }}_data pg_autoscale_mode on"
  run_once: true
  when: "cmd_autoscale.stdout == 'pg_autoscale_mode: off'"

- name: create FS
  command: "ceph fs new {{ volume_name }} {{ volume_name }}_metadata {{ volume_name }}_data"
  run_once: true
  when: "volume_name not in ceph_vol.stdout"
