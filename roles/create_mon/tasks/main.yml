---
- name: download key for Ceph repo
  get_url:
    url: https://download.ceph.com/keys/release.asc
    dest: /etc/apt/trusted.gpg.d/ceph.asc

- name: Add ceph repository
  apt_repository:
    repo: "deb https://download.ceph.com/debian-{{ ceph_version }}/ {{ ansible_distribution_release }} main"
    state: present
    filename: ceph
  register: ceph_repo

- name: install ceph from packages
  apt:
    update_cache: "{{ ceph_repo is changed }}"
    name: ceph
    state: present

- name: fix rights
  file:
    path: /etc/ceph
    state: directory
    owner: ceph
    group: ceph

- name: check if needed conf files are present
  stat:
    path: "/tmp/{{ item|basename }}"
  register: st_conf_files
  delegate_to: localhost
  become: false
  loop:
    - /etc/ceph/ceph.conf
    - /tmp/monmap
    - /tmp/ceph.mon.keyring
    - /etc/ceph/ceph.client.admin.keyring

- name: copy files to all the nodes
  copy:
    src: "/tmp/{{ item.item|basename }}"
    dest: "{{ item.item }}"
    owner: ceph
    group: ceph
  when: item.stat.exists
  loop: "{{ st_conf_files.results }}"

- name: create mon directory
  file:
    path: "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
    state: directory
    owner: ceph
    group: ceph
    recurse: true

- name: initialize mon
  command: "ceph-mon --mkfs -i {{ inventory_hostname }} --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring"
  become_user: ceph
  become: true
  args:
    creates: "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}/kv_backend"

- name: start mon daemon
  systemd:
    name: "ceph-mon@{{ inventory_hostname }}"
    enabled: true
    state: started

- name: check insecure issue
  command: ceph config get mon auth_allow_insecure_global_id_reclaim
  register: insecure_reclaim
  changed_when: false

- name: fix insecure issue
  command: "ceph config set mon auth_allow_insecure_global_id_reclaim false"
  when: "insecure_reclaim.stdout != 'false'"

- name: force using msgr2 otherwise ceph -s will complain
  command: ceph mon enable-msgr2
  changed_when: false
  run_once: true
